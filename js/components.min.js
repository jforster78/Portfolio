"use strict";class toggleMenu extends HTMLElement{constructor(){super(),this._root=this.attachShadow({mode:"open"})}connectedCallback(){this._root.innerHTML='\n      <style>\n        @media only screen and (min-width: 1024px) {\n          .header__nav {\n            width: 960px;\n            margin: auto;\n          }\n        }\n        @media only screen and (min-width: 1240px) {\n          .header__nav {\n            width: 1100px;\n            margin: auto;\n          }\n        }\n        @media only screen and (min-width: 1440px) {\n          .header__nav {\n            width: 1300px;\n            margin: auto;\n          }\n        }\n        .header__h1 {\n          margin: 0;\n        }\n        .header__navlist {\n          display: flex;\n          justify-content: flex-start;\n          flex-direction: column;\n          list-style-type: none;\n          margin: 0;\n          padding: 0 1rem;\n          background-color: #191919;\n        }\n        @media only screen and (min-width: 900px) {\n          .header__navlist {\n            flex-direction: row;\n            background-color: #586c8c;\n          }\n        }\n        .header__navitem {\n          font-family: "subHeadings", serif;\n        }\n        .header__navitem--left {\n          font-family: "title", cursive;\n          color: #fff;\n          padding: .75rem 1rem;\n        }\n        @media only screen and (min-width: 900px) {\n          .header__navitem--left {\n            padding: 1.5rem 0 1.5rem 1rem;\n            flex-grow: 1;\n          }\n        }\n        .header__link {\n          text-decoration: none;\n          color: #fff;\n        }\n        .header__navlink {\n          text-decoration: none;\n          color: #fff;\n          border-bottom: 1px solid #fff;\n          display: none;\n          padding: 1.5rem 0.5rem;\n        }\n        .header__navlink:hover {\n          color: #586c8c;\n        }\n        @media only screen and (min-width: 900px) {\n          .header__navlink {\n            display: block;\n            border-bottom: none;\n            padding: 2rem 1rem;\n          }\n          .header__navlink:hover {\n            color: #191919;\n          }\n        }\n        .header__navlink--noborder {\n          border-bottom: none;\n        }\n        .header__navbutton {\n          align-self: flex-end;\n          display: initial;\n          position: absolute;\n          cursor: pointer;\n          right: 1rem;\n          top: .8rem;\n          font-size: 1.5rem;\n          display: block;\n        }\n        @media only screen and (min-width: 900px) {\n          .header__navbutton {\n            display: none;\n          }\n        }\n        .header__navbar1, .header__navbar2, .header__navbar3 {\n          width: 25px;\n          padding: 1px 0;\n          margin: 7px;\n          transition: 0.4s;\n          background-color: #fff;\n        }\n        .header__navbutton--change .header__navbar1 {\n          -webkit-transform: rotate(-45deg) translate(-5px, 6px);\n          transform: rotate(-45deg) translate(-5px, 6px);\n        }\n        .header__navbutton--change .header__navbar2 {\n          opacity: 0;\n        }\n        .header__navbutton--change .header__navbar3 {\n          -webkit-transform: rotate(45deg) translate(-6.75px, -8px);\n          transform: rotate(45deg) translate(-6.75px, -8px);\n        }\n        .header__navshow {\n          display: flex;\n        }\n      </style>\n\n      <header class="header">\n        <nav class="header__nav">\n          <div class="header__navbutton">\n            <div class="header__navbar1"></div>\n            <div class="header__navbar2"></div>\n            <div class="header__navbar3"></div>\n          </div>\n          <ul class="header__navlist">\n            <li class="header__navitem header__navitem--left"><a href="index.html" class="header__link"><h1 class="header__h1">JF Web</h1></a></li>\n            <li class="header__navitem"><a class="header__navlink" href="index.html#help">Services</a></li>\n            <li class="header__navitem"><a class="header__navlink" href="index.html#portfolio">Portfolio</a></li>\n            <li class="header__navitem"><a class="header__navlink" href="index.html#process">Process</a></li>\n            <li class="header__navitem"><a class="header__navlink header__navlink--noborder" href="index.html#contact">Contact</a></li>\n          </ul>\n        </nav>\n      </header>';this._root.querySelector(".header__navbutton").addEventListener("click",()=>{(()=>{this._root.querySelectorAll(".header__navlink").forEach(n=>n.classList.toggle("header__navshow"))})(),(()=>{this._root.querySelector(".header__navbutton").classList.toggle("header__navbutton--change")})()})}}customElements.define("header-menu",toggleMenu);class slideShow extends HTMLElement{constructor(){super(),this._root=this.attachShadow({mode:"open"});document.querySelector("slide-show").setAttribute("class","grid__slideShow")}connectedCallback(){this._root.innerHTML='\n    <style>\n      .grid__slides {\n        position: relative;\n        padding: 0;\n        max-width: 100%;\n        min-height: 100%;\n      }\n      .grid__slides img {\n        -webkit-transition: opacity 2.5s;\n        transition: opacity 2.5s;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        object-fit: cover;\n      }\n      @media only screen and (min-width: 900px) {\n        .grid__slideShow img {\n          min-height: 100%;\n        }\n      }\n      .grid__slides img.fadeIn {\n        opacity: 1;\n      }\n    </style>\n\n    <div class="grid__slides"></div>';let n=0,e=this._root.querySelector(".grid__slides"),t=e.childNodes;const a=()=>{(n=>{n.className=""})(t[n]),++n===t.length&&(n=0),(n=>{n.className="fadeIn"})(t[n]),setTimeout(()=>{a()},1e4)};(n=>{for(let t=0;t<n.length;t++){const a=document.createElement("img");a.src=n[t],e.appendChild(a).setAttribute("alt","Slide "+[t])}})(["img/slideShow/img1.jpg","img/slideShow/img2.jpg","img/slideShow/img3.jpg"]),a()}}customElements.define("slide-show",slideShow);class toTop extends HTMLElement{constructor(){super(),this._root=this.attachShadow({mode:"open"})}connectedCallback(){this._root.innerHTML='\n    <style>\n      .backToTheTop {\n        display: none;\n        position: fixed;\n        bottom: 90px;\n        right: 15px;\n        opacity: 0.7;\n        cursor: pointer;\n        background-color: #586c8c;\n        padding: 18px 15px 5px;\n        border-radius: 50%;\n      }\n      @media only screen and (min-width: 900px) {\n        .backToTheTop {\n          background-color: #191919;\n        }\n      }\n      .backToTheTop__button {\n        border: solid #eef0f3;\n        border-width: 3px 0 0 3px;\n        display: inline-block;\n        padding: 7px;\n        -webkit-transform: rotate(45deg);\n        transform: rotate(45deg);\n      }\n    </style>\n\n    \x3c!-- Back to the top--\x3e\n    <div class="backToTheTop">\n      <div class="backToTheTop__button"></div>\n    </div>',window.onscroll=(()=>{(()=>{window.scrollY>350?this._root.querySelector(".backToTheTop").style.display="block":this._root.querySelector(".backToTheTop").style.display="none"})()});let n=0;this._root.querySelector(".backToTheTop").addEventListener("click",()=>{n=setInterval(()=>{0===window.scrollY?clearInterval(n):window.scroll(0,window.scrollY-250)},16)})}}customElements.define("to-top",toTop);class copyrightDate extends HTMLElement{constructor(){super(),this._root=this.attachShadow({mode:"open"})}connectedCallback(){this._root.innerHTML='\n    <style>\n      .footer__copyright {\n        font-size: 90%;\n      }\n    </style>\n\n    <p class="footer__copyright"><small>Copyright &copy;<span id="date"> 2019 </span> JF Web</small></p>';const n=new Date;this._root.getElementById("date").innerHTML=n.getFullYear()}}customElements.define("copyright-date",copyrightDate);